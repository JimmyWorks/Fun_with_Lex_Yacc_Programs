Lex/Yacc Basic Lisp Program

Author: Jimmy Nguyen
Email: Jimmy@JimmyWorks.net

=================Contents===================
src/
	grammar.y		Yacc file (parser)
	main.cc			C++ Main source file
	Makefile		Makefile
	tokenizer.l		Lexer file (tokenizer)
	
=============Building Executable============
1. Import project
2. Change directory to src/ directory
3. Run "make"

==============Running Executable============
1. Run program executable "./basic_lisp"
2. Execute lisp commands.  

Try these test cases:
> 	1
1

> 	2.3
2.3

>	(+ 1 2)
3

>	(+ 1.0 2.5)
3.5

>	(1+ (* 2 3))
7

>	(^ 2 3)
8

>	(let x 1)
1

>	x	
1

>	(let y 2)
2

>	y
2

>	(+ x y)
3

>	(let z 1234.567)
1234.57

>	z
1234.57

>	(print z)
1234.57

>	(if(EQ 1 1) 3 4)
3

>	(if(EQ 1 2) 3 4)
4

>	(if(EQ 1 2)(+ 1 2) (+ 3 4))
7

>	(+ 1 2) ;;; this is a comment
3

>	(+ 010 010) ;;;; this is for octal summation: 8 + 8
16

>	(+ 010 20) ; this is for Octal decimal-value 8 plus decimal 20                               
28

>	(stop)
GOODBYE!
